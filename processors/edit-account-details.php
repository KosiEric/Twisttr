<?php




require_once  '../config/functions.php';
require_once  '../config/config.php';



class EditUserAccountDetails extends  Functions {


    private $username_exists_error = "username already taken" , $email_address_exists_error = "account with that email exists" ,
        $phone_exists_error ="phone number already registered";

    private $network_error = "try checking your network cconnection" , $success_message = "account details saved succesfully";

    private $data ,  $fullname ,  $email , $username , $phone , $password , $userID , $user_details;
    
    
    private $successText = "success" , $errorText = "error";
    
    private $config;
    
    function __construct()
    {
        parent::__construct();
        $this->config = new WebsiteDetails();
    }
    
    
    function __destruct()

    {
    parent::__destruct(); // TODO: Change the autogenerated stub
 
        
    }
    
    
    private function  isReady() : bool  {
        
        return !empty($this->data = json_decode($_POST['data'] , true));
    }
    
    
    private  function  setDetails () : bool  {
        
        
        $this->fullname = $this->escape_string(ucwords($this->data["fullname"]));
        $this->email =  strtolower($this->escape_string($this->data["email"]));
        $this->username = strtolower($this->escape_string($this->data["username"]));
        $this->phone = $this->escape_string($this->data["phone"]);
        $this->password = md5($this->escape_string($this->data["password"]));
        $this->userID = $this->data["userID"];
        $this->user_details = $this->fetch_data_from_table($this->users_table_name , 'user_id' , $this->userID)[0];

        
        return true;
    }
    
    private function  isUsername () : bool{
    
    
        return ($this->username == $this->user_details["username"] or !$this->record_exists_in_table($this->users_table_name , 'username' , $this->username));
    
    }
    
    


    private function isEmail() : bool {
        return ($this->email == $this->user_details["email"] or !$this->record_exists_in_table($this->users_table_name , 'email' , $this->email));

    }
    
    private function isPhone () : bool{
        return ($this->phone == $this->user_details["phone"] or !$this->record_exists_in_table($this->users_table_name , 'phone' , $this->phone));

    }


    private function  emailAddressChanged() : bool  {
        return $this->user_details["email"] != $this->email;
    }

    private function  updateRecord() : bool  {

        return $this->update_multiple_fields($this->users_table_name , ["fullname" => $this->fullname , "email" => $this->email , "username" => $this->username , "phone" => $this->phone , "password" => $this->password] ,
            "user_id = '{$this->userID}'");
    }


    public  function Processor ()  {

        if($this->isReady() && $this->setDetails()){

            if(!$this->isUsername())
                return json_encode(Array($this->successText => "0" , $this->errorText => $this->username_exists_error));

            if(!$this->isPhone())
                return json_encode(Array($this->successText => "0" , $this->errorText => $this->phone_exists_error));
            if(!$this->isEmail())
                return json_encode(Array($this->successText => "0" , $this->errorText => $this->email_address_exists_error));

            if($this->updateRecord())
                if($this->emailAddressChanged())
                    $this->update_record($this->users_table_name , 'email_verified' , '0' , 'user_id' , $this->userID);
            return json_encode(Array($this->successText => "1" , $this->errorText => $this->success_message));
        }

    }
}





$editUserAccountDetails = new EditUserAccountDetails();

echo  $editUserAccountDetails->Processor();


?>